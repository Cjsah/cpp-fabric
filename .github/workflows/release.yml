# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Publish Release

on:
  release:
    types: [published]

jobs:
  properties:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Get mod information
        run: |
          path='./gradle.properties'
          for property in mod_version minecraft_version yarn_version fabric_version fabric_api_version
          do
            result=$(sed -n "/^[[:space:]]*$property[[:space:]]*=[[:space:]]*/s/^[[:space:]]*$property[[:space:]]*=[[:space:]]*//p" "$path")
            echo "$property: $result"
          done
  build:
    runs-on: ubuntu-latest
    needs: [properties]
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
      - name: Set status in codes
        run: |
          sed -i "s/undefined/$GITHUB_RUN_NUMBER/g" gradle.properties
          sed -i "s/{maven_url}/${{ secrets.MAVEN_URL }}/g" gradle.properties
          sed -i "s/{username}/${{ secrets.MAVEN_USERNAME }}/g" gradle.properties
          sed -i "s/{password}/${{ secrets.MAVEN_PASSWORD }}/g" gradle.properties
      - name: Give permission
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build/libs/
      - name: Get release jar
        id: getjar
        run: |
          output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
          echo "::set-output name=jarname::$output"
      - name: Upload to Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/libs/${{ steps.getjar.outputs.jarname }}
          asset_name: ${{ steps.getjar.outputs.jarname }}
          asset_content_type: application/java-archive
      - name: Publish to maven
        run: ./gradlew publish
