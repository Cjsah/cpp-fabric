package net.cpp.init;

import net.cpp.api.PotionItem;
import net.minecraft.entity.effect.StatusEffectInstance;
import net.minecraft.entity.effect.StatusEffects;
import net.minecraft.item.BlockItem;
import net.minecraft.item.FoodComponent;
import net.minecraft.item.Item;
import net.minecraft.util.Identifier;
import net.minecraft.util.registry.Registry;

import static net.cpp.Craftingpp.CPP_GROUP_MACHINE;
import static net.cpp.Craftingpp.CPP_GROUP_MISC;
import static net.cpp.Craftingpp.CPP_GROUP_TOOL;
import static net.cpp.Craftingpp.CPP_GROUP_FOOD;
import static net.cpp.Craftingpp.CPP_GROUP_PLANT;

public final class CppItems {

    public static final String MODID = "cpp";
    // 插件
    public static Item EMPTY_PLUGIN = new Item(new Item.Settings().group(CPP_GROUP_MACHINE));
    public static Item LOW_TEMPERATURE_PLUGIN = new Item(new Item.Settings().group(CPP_GROUP_MACHINE));
    public static Item LOW_PRESSURE_PLUGIN = new Item(new Item.Settings().group(CPP_GROUP_MACHINE));
    public static Item HIGH_TEMPERATURE_PLUGIN = new Item(new Item.Settings().group(CPP_GROUP_MACHINE));
    public static Item HIGH_PRESSURE_PLUGIN = new Item(new Item.Settings().group(CPP_GROUP_MACHINE));
    public static Item COBBLESTONE_PLUGIN = new Item(new Item.Settings().group(CPP_GROUP_MACHINE));
    public static Item STONE_PLUGIN = new Item(new Item.Settings().group(CPP_GROUP_MACHINE));
    public static Item BLACK_STONE_PLUGIN = new Item(new Item.Settings().group(CPP_GROUP_MACHINE));
    public static Item NETHERRACK_PLUGIN = new Item(new Item.Settings().group(CPP_GROUP_MACHINE));
    public static Item END_STONE_PLUGIN = new Item(new Item.Settings().group(CPP_GROUP_MACHINE));
    public static Item BASALT_PLUGIN = new Item(new Item.Settings().group(CPP_GROUP_MACHINE));
    // 上古卷轴
    public static Item ANCIENT_SCROLL = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    // 附魔金属
    public static Item ENCHANTED_IRON = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item ENCHANTED_GOLD = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item ENCHANTED_DIAMOND = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    // 材料
    public static Item COAL_NUGGET = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item CINDER = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SPLINT = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SILICON_PLATE = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item MOON_SHARD = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SUN_SHARD = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item CLAY_BUCKET = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    // 粉末和瓶装物
    public static Item COPPER_DUST = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item IRON_DUST = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item GOLD_DUST = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item CARBON_DUST = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item EMERALD_DUST = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item DIAMOND_DUST = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item QUARTZ_DUST = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item RARE_EARTH_SALT = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item ALKALOID_RARE_EARTH = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item RARE_EARTH_DUST = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item COARSE_SILICON = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SILICON_DUST = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item STEEL_DUST = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item FERTILIZER = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item BOTTLE_OF_SALT = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item ACID = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SODA_WATER = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item BIONIC_ACID = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item ALKALOID = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item BOTTLE_OF_AIR = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item AMMONIA_REFRIGERANT = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    // 工具
    public static Item BLUE_FORCE_OF_SKY = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item GREEN_FORCE_OF_WATER = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item CYAN_FORCE_OF_MOUNTAIN = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item ORANGE_FORCE_OF_DIRT = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item YELLOW_FORCE_OF_EARTH = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item RED_FORCE_OF_FIRE = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item PURPLE_FORCE_OF_LIFE = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item WHITE_FORCE_OF_LIGHTNING = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item BLACK_FORCE_OF_MOON = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item PORTABLE_CRAFTING_TABLE = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item PORTABLE_CRAFTING_MACHINE = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item MAGNET = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item TIME_CHECKER = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item TIME_CONDITIONER = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item ORIGIN_OF_THE_WORLD = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item COMPRESSOR = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item ELDER_S_WORDS = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item COORDINATE_RECORDER = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item MUFFLER = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item SACHET = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item GRAFTER = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item GLASS_PICKAXE = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item CHEST_TRANSPORTER = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item FIRECRACKERS = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item BROOM = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item SHOOTING_STAR = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item INDUSTRIOUS_HAND = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item BREAK_HAND = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item SMART_HAND = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item ANGRY_HAND = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item TOUGHEN_HAND = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item GOLEM = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item FARMER_GOLEM = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item MINER_GOLEM = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item FISHER_GOLEM = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item WARRIOR_GOLEM = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item HERDER_GOLEM = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item SANTA_GIFT = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    // 食物
    public static Item KETCHUP = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(2).saturationModifier(0.3F).build()));
    public static Item STRAWBERRY_JAM = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(2).saturationModifier(0.3F).build()));
    public static Item BLUE_BERRY_JAM = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(2).saturationModifier(0.3F).build()));
    public static Item ORANGE_JAM = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(2).saturationModifier(0.3F).build()));
    public static Item CHERRY_JAM = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(2).saturationModifier(0.3F).build()));
    public static Item APPLE_JAM = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(2).saturationModifier(0.3F).build()));
    public static Item YEAST_POWDER = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(2).saturationModifier(0.3F).build()));
    public static Item BUTTER = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(2).saturationModifier(0.3F).build()));
    public static Item CHEESE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(2).saturationModifier(0.3F).build()));
    public static Item RAISIN = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 200, 0), 1.0F).build()));
    public static Item TOFFEE_APPLE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(5).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()));
    public static Item CANDIED_HAW = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(10).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()).maxCount(16));
    public static Item CUPCAKE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(5).saturationModifier(0.3F).build()));
    public static Item CAKE_ROLL = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(5).saturationModifier(0.3F).build()));
    public static Item CROISSANT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(5).saturationModifier(0.3F).build()));
    public static Item CARAMEL_PUDDING = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(10).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()).maxCount(16));
    public static Item DOUGHNUT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(7).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()));
    public static Item PURPLE_DOUGHNUT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(7).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()));
    public static Item PINK_DOUGHNUT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(7).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()));
    public static Item WHITE_DOUGHNUT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(7).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()));
    public static Item BLUE_DOUGHNUT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(7).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()));
    public static Item GREEN_DOUGHNUT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(7).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()));
    public static Item HONEY_PANCAKE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(10).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()).maxCount(16));
    public static Item BOILED_EGG = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(2).saturationModifier(0.3F).build()));
    public static Item BAKED_CARROT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(5).saturationModifier(0.3F).build()));
    public static Item BACON = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(10).saturationModifier(0.3F).build()));
    public static Item VEGETABLE_KEBAB = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(10).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.JUMP_BOOST, 600, 0), 1.0F).build()).maxCount(16));
    public static Item BEEF_KEBAB = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(16).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH, 600, 0), 1.0F).build()).maxCount(16));
    public static Item PORK_KEBAB = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(16).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH, 600, 0), 1.0F).build()).maxCount(16));
    public static Item LAMB_KEBAB = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(14).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH, 600, 0), 1.0F).build()).maxCount(16));
    public static Item CHICKEN_KEBAB = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(14).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH, 600, 0), 1.0F).build()).maxCount(16));
    public static Item RAW_COLORFUL_VEGETABLE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(10).saturationModifier(0.3F).build()).maxCount(1));
    public static Item RAW_BRAISED_PORK_WITH_POTATOES = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(10).saturationModifier(0.3F).build()).maxCount(1));
    public static Item RAW_BRAISED_BEEF_WITH_POTATOES = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(10).saturationModifier(0.3F).build()).maxCount(1));
    public static Item RAW_RABBIT_STEW = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(10).saturationModifier(0.3F).build()).maxCount(1));
    public static Item COLORFUL_VEGETABLE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(14).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.JUMP_BOOST, 600, 0), 1.0F).build()).maxCount(1));
    public static Item BRAISED_PORK_WITH_POTATOES = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(16).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH, 600, 0), 1.0F).build()).maxCount(1));
    public static Item BRAISED_BEEF_WITH_POTATOES = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(16).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH, 600, 0), 1.0F).build()).maxCount(1));
    public static Item RABBIT_STEW = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(16).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH, 600, 0), 1.0F).build()).maxCount(1));
    public static Item DUMPLING = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(8).saturationModifier(0.3F).build()));
    public static Item MEAT_FLOSS_BREAD = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(10).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()).maxCount(16));
    public static Item CHRISTMAS_ROAST_CHICKEN = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(16).saturationModifier(0.3F).build()).maxCount(8));
    public static Item FISH_AND_CHIPS = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(16).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()).maxCount(8));
    public static Item BURGER = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(20).saturationModifier(0.3F).build()).maxCount(8));
    public static Item PIZZA = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(5).saturationModifier(0.3F).build()));
    public static Item SUSHI = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(5).saturationModifier(0.3F).build()));
    public static Item QINGTUAN = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(5).saturationModifier(0.3F).build()));
    public static Item SAKURA_MOCHI = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(5).saturationModifier(0.3F).build()));
    public static Item ZONGZI = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(9).saturationModifier(0.3F).build()).maxCount(16));
    public static Item ZONGZI_BOILED_EGG = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(9).saturationModifier(0.3F).build()).maxCount(16));
    public static Item ZONGZI_CHINESE_DATA = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(9).saturationModifier(0.3F).build()).maxCount(16));
    public static Item ZONGZI_COOKED_PORKCHOP = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(9).saturationModifier(0.3F).build()).maxCount(16));
    public static Item ZONGZI_SALT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(9).saturationModifier(0.3F).build()).maxCount(16));
    public static Item ZONGZI_SODA_WATER = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(9).saturationModifier(0.3F).build()).maxCount(16));
    public static Item ZONGZI_HONEY_BOTTLE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(9).saturationModifier(0.3F).build()).maxCount(16));
    public static Item SANDWICH = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(10).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH, 600, 0), 1.0F).build()).maxCount(16));
    public static Item STARGAZY_PIE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(16).saturationModifier(0.3F).build()).maxCount(8));
    public static Item BAKED_SHROOMLIGHT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(5).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.GLOWING, 600, 0), 1.0F).statusEffect(new StatusEffectInstance(StatusEffects.NIGHT_VISION, 600, 0), 1.0F).build()));
    public static Item SOUL_FRIED_CHICKEN = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(10).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION, 600, 0), 1.0F).build()).maxCount(16));
    public static Item LUXURIOUS_NETHERITE_BARBECUE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(20).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH, 600, 0), 1.0F).build()).maxCount(1));
    public static Item ASSORTED_ROOT_CANDY = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(5).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 600, 0), 1.0F).build()).maxCount(16));
    public static Item NETHERITE_MUSHROOM_STEW = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(12).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA, 200, 0), 1.0F).build()).maxCount(1));
    public static Item DOUBLE_COLOR_VINE_SALAD = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(6).saturationModifier(0.3F).statusEffect(new StatusEffectInstance(StatusEffects.JUMP_BOOST, 600, 0), 1.0F).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA, 200, 0), 1.0F).build()).maxCount(1));
    public static Item COLD_DRINK = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(6).saturationModifier(0.3F).build()).maxCount(16));
    // 水果
    public static Item APRICOT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item BANANA = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item BLUEBERRY = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item CHERRY = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item CHINESE_DATE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item COCONUT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item GOLDEN_GRAPE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item GRAPE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item GRAPEFRUIT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item HAWTHORN = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item LEMON = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item LONGAN = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item LOQUAT = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item LYCHEE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item MANGO = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item ORANGE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item PAYAPA = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item PEACH = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item PEAR = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item PERSIMMON = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item PLUM = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item POMEGRANATE = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item STRAWBERRY = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item TOMATO = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    public static Item CITRUS = new Item(new Item.Settings().group(CPP_GROUP_FOOD).food((new FoodComponent.Builder()).hunger(4).saturationModifier(0.3F).build()));
    // 药剂
    public static Item AGENTIA_OF_LIGHTNESS = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.SLOW_FALLING, 4800, 0));
    public static Item AGENTIA_OF_EYESIGHT = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.NIGHT_VISION, 9600, 0));
    public static Item AGENTIA_OF_FIRE_SHIELD = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.FIRE_RESISTANCE, 9600, 0));
    public static Item AGENTIA_OF_WATERLESS = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.WATER_BREATHING, 9600, 0));
    public static Item AGENTIA_OF_TRANSPARENTNESS = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.INVISIBILITY, 9600, 0));
    public static Item AGENTIA_OF_BOUNCE = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.JUMP_BOOST, 4800, 1));
    public static Item AGENTIA_OF_AGILENESS = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.SPEED, 4800, 1));
    public static Item AGENTIA_OF_SHARPNESS = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.STRENGTH, 4800, 1));
    public static Item AGENTIA_OF_REJUVENESS = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.REGENERATION, 2400, 1));
    public static Item AGENTIA_OF_BLOOD = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.INSTANT_HEALTH, 1, 2));
    public static Item AGENTIA_OF_EXTREMENESS = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.HASTE, 4800, 1));
    public static Item AGENTIA_OF_SHIELD = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.RESISTANCE, 4800, 1));
    public static Item AGENTIA_OF_TIDE = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.CONDUIT_POWER, 4800, 0));
    public static Item AGENTIA_OF_CHAIN = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1));
    public static Item AGENTIA_OF_SKY = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.SPEED, 7200, 1), new StatusEffectInstance(StatusEffects.SLOW_FALLING, 7200, 0));
    public static Item AGENTIA_OF_OCEAN = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.WATER_BREATHING, 14400, 0), new StatusEffectInstance(StatusEffects.CONDUIT_POWER, 7200, 0));
    public static Item AGENTIA_OF_RIDGE = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.STRENGTH, 7200, 1), new StatusEffectInstance(StatusEffects.NIGHT_VISION, 14400, 0));
    public static Item AGENTIA_OF_DIRT = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.INVISIBILITY, 14400, 0));
    public static Item AGENTIA_OF_EARTH = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.JUMP_BOOST, 7200, 1), new StatusEffectInstance(StatusEffects.HASTE, 7200, 1));
    public static Item AGENTIA_OF_FIRE = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.FIRE_RESISTANCE, 14400, 0), new StatusEffectInstance(StatusEffects.RESISTANCE, 7200, 1));
    public static Item AGENTIA_OF_LIFE = new PotionItem(new Item.Settings().group(CPP_GROUP_MISC).maxCount(1), new StatusEffectInstance(StatusEffects.REGENERATION, 3600, 1), new StatusEffectInstance(StatusEffects.INSTANT_HEALTH, 1, 3));
    // 植物
    public static Item LYCORIS_RADIATA_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item TRIFOLIUM_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item BLACKTHORN_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item CATTAIL_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item MARIGOLD_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item HIBISCUS_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item HYACINTH_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item CALAMUS_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item WILD_LILIUM_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item BAUHINIA_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item FLUFFY_GRASS_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item GERBERA_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item ESPARTO_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item GLOW_FORSYTHIA_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item GLAZED_SHADE_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item STELERA_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item FORAGE_CRYSTAL_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item ISORCHID_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item BURNING_CHRYSANTHE_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item OXALIS_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item LYCORIS_RADIATA = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item TRIFOLIUM = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item BLACKTHORN = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item CATTAIL = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item MARIGOLD = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item HIBISCUS = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item HYACINTH = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item CALAMUS = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item WILD_LILIUM = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item BAUHINIA = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item FLUFFY_GRASS = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item GERBERA = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item ESPARTO = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item GLOW_FORSYTHIA = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item GLAZED_SHADE = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item STELERA = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item FORAGE_CRYSTAL = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item ISORCHID = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item BURNING_CHRYSANTHE = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item OXALIS = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item CALLIOPSIS = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item CYCLAMEN = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item IRIS = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item LILIUM_PUMILUM = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item SNOWDROP = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item NARCISSUS = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item COLE_FLOWER = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item LUPINE = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item CROCU = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item PANSY = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item ARABIA_SPEEDWELL = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item SILENE_PENDULA = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item ARTEMISIA_ARGYI = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item BLUE_ROSE = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item POINSETTIA = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item CHRISTMAS_TREE = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item RICE_SEED = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item RICE = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item FRUIT_SAPLING = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item ORE_SAPLING = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item WOOL_SAPLING = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item SAKURA_SAPLING = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item FRUIT_LEAVES = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item ORE_LEAVES = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item WOOL_LEAVES = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    public static Item SAKURA_LEAVES = new Item(new Item.Settings().group(CPP_GROUP_PLANT));
    // 仪式和魔法
    public static Item SEALING_WAND = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item STAR_WAND = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item DREAM_WAND = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item TEMPERANCER = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item WAND_OF_THE_DARKNESS = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    // 装饰-装备
    public static Item RED_LIP = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item PURPLE_EYE = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item LASH = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item CAT_BREED = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item GARLAND = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item BLACK_FRAMED_GLASSES = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item ORANGE_FRAMED_GLASSES = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item JOKING_GLASSES = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item MINION_GOGGLES = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item PANTS = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item EMPIRE_HAT = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item GLASS_HELMET = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item GLOW_HAT = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item GREEN_HAT = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item BLACK_HAT = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item NURSE_HAT = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item JACKET = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item RED_COAT = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item TIGHT_LEATHER_LEGGINGS = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item BLUE_JEANS = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    public static Item SNOW_BOOTS = new Item(new Item.Settings().group(CPP_GROUP_TOOL));
    // 装饰-杂
    public static Item CLASSICAL_PAINTING = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SPRING_FESTIVAL_DECORATIONS = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    // 纸片人
    public static Item CHARACTER = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    // 标志和图案
    public static Item CHINA_FLAG = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item USA_FLAG = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item RUSSIA_FLAG = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item UK_FLAG = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item FRANCE_FLAG = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item BILIBILI_LOGO = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item GITHUB_LOGO = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item MCMOD_LOGO = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item TCP_LOGO = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item CBL_LOGO = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item NF_LOGO = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SHIELD_CHINA_FLAG = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SHIELD_USA_FLAG = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SHIELD_RUSSIA_FLAG = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SHIELD_UK_FLAG = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SHIELD_FRANCE_FLAG = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SHIELD_BILIBILI = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SHIELD_GITHUB = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SHIELD_MCMOD = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SHIELD_TCP = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SHIELD_CBL = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item SHIELD_NF = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    // 告示牌
    public static Item WHITE_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item ORANGE_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item MAGENTA_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item LIGHT_BLUE_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item YELLOW_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item LIME_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item PINK_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item GRAY_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item LIGHT_GRAY_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item CYAN_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item PURPLE_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item BLUE_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item BROWN_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item GREEN_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item RED_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item BLACK_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));
    public static Item GLASS_SIGN = new Item(new Item.Settings().group(CPP_GROUP_MISC));


    public static void register() {
        EMPTY_PLUGIN = registerItem("empty_plugin", EMPTY_PLUGIN);
        LOW_TEMPERATURE_PLUGIN = registerItem("low_temperature_plugin", LOW_TEMPERATURE_PLUGIN);
        LOW_PRESSURE_PLUGIN = registerItem("low_pressure_plugin", LOW_PRESSURE_PLUGIN);
        HIGH_TEMPERATURE_PLUGIN = registerItem("high_temperature_plugin", HIGH_TEMPERATURE_PLUGIN);
        HIGH_PRESSURE_PLUGIN = registerItem("high_pressure_plugin", HIGH_PRESSURE_PLUGIN);
        COBBLESTONE_PLUGIN = registerItem("cobblestone_plugin", COBBLESTONE_PLUGIN);
        STONE_PLUGIN = registerItem("stone_plugin", STONE_PLUGIN);
        BLACK_STONE_PLUGIN = registerItem("black_stone_plugin", BLACK_STONE_PLUGIN);
        NETHERRACK_PLUGIN = registerItem("netherrack_plugin", NETHERRACK_PLUGIN);
        END_STONE_PLUGIN = registerItem("end_stone_plugin", END_STONE_PLUGIN);
        BASALT_PLUGIN = registerItem("basalt_plugin", BASALT_PLUGIN);
        ANCIENT_SCROLL = registerItem("ancient_scroll", ANCIENT_SCROLL);
        ENCHANTED_IRON = registerItem("enchanted_iron", ENCHANTED_IRON);
        ENCHANTED_GOLD = registerItem("enchanted_gold", ENCHANTED_GOLD);
        ENCHANTED_DIAMOND = registerItem("enchanted_diamond", ENCHANTED_DIAMOND);
        COAL_NUGGET = registerItem("coal_nugget", COAL_NUGGET);
        CINDER = registerItem("cinder", CINDER);
        SPLINT = registerItem("splint", SPLINT);
        Registry.register(Registry.ITEM, new Identifier("cpp:rare_earth_glass"), new BlockItem(CppBlocks.RARE_EARTH_GLASS, new Item.Settings().group(CPP_GROUP_MISC)));
        Registry.register(Registry.ITEM, new Identifier("cpp:reinforced_glass"), new BlockItem(CppBlocks.REINFORCED_GLASS, new Item.Settings().group(CPP_GROUP_MISC)));
        SILICON_PLATE = registerItem("silicon_plate", SILICON_PLATE);
        MOON_SHARD = registerItem("moon_shard", MOON_SHARD);
        SUN_SHARD = registerItem("sun_shard", SUN_SHARD);
        Registry.register(Registry.ITEM, new Identifier("cpp:moon_stone"), new BlockItem(CppBlocks.MOON_STONE, new Item.Settings().group(CPP_GROUP_MISC)));
        Registry.register(Registry.ITEM, new Identifier("cpp:sun_stone"), new BlockItem(CppBlocks.SUN_STONE, new Item.Settings().group(CPP_GROUP_MISC)));
        CLAY_BUCKET = registerItem("clay_bucket", CLAY_BUCKET);
        COPPER_DUST = registerItem("copper_dust", COPPER_DUST);
        IRON_DUST = registerItem("iron_dust", IRON_DUST);
        GOLD_DUST = registerItem("gold_dust", GOLD_DUST);
        CARBON_DUST = registerItem("carbon_dust", CARBON_DUST);
        EMERALD_DUST = registerItem("emerald_dust", EMERALD_DUST);
        DIAMOND_DUST = registerItem("diamond_dust", DIAMOND_DUST);
        QUARTZ_DUST = registerItem("quartz_dust", QUARTZ_DUST);
        RARE_EARTH_SALT = registerItem("rare_earth_salt", RARE_EARTH_SALT);
        ALKALOID_RARE_EARTH = registerItem("alkaloid_rare_earth", ALKALOID_RARE_EARTH);
        RARE_EARTH_DUST = registerItem("rare_earth_dust", RARE_EARTH_DUST);
        COARSE_SILICON = registerItem("coarse_silicon", COARSE_SILICON);
        SILICON_DUST = registerItem("silicon_dust", SILICON_DUST);
        STEEL_DUST = registerItem("steel_dust", STEEL_DUST);
        FERTILIZER = registerItem("fertilizer", FERTILIZER);
        BOTTLE_OF_SALT = registerItem("bottle_of_salt", BOTTLE_OF_SALT);
        ACID = registerItem("acid", ACID);
        SODA_WATER = registerItem("soda_water", SODA_WATER);
        BIONIC_ACID = registerItem("bionic_acid", BIONIC_ACID);
        ALKALOID = registerItem("alkaloid", ALKALOID);
        BOTTLE_OF_AIR = registerItem("bottle_of_air", BOTTLE_OF_AIR);
        AMMONIA_REFRIGERANT = registerItem("ammonia_refrigerant", AMMONIA_REFRIGERANT);
        BLUE_FORCE_OF_SKY = registerItem("blue_force_of_sky", BLUE_FORCE_OF_SKY);
        GREEN_FORCE_OF_WATER = registerItem("green_force_of_water", GREEN_FORCE_OF_WATER);
        CYAN_FORCE_OF_MOUNTAIN = registerItem("cyan_force_of_mountain", CYAN_FORCE_OF_MOUNTAIN);
        ORANGE_FORCE_OF_DIRT = registerItem("orange_force_of_dirt", ORANGE_FORCE_OF_DIRT);
        YELLOW_FORCE_OF_EARTH = registerItem("yellow_force_of_earth", YELLOW_FORCE_OF_EARTH);
        RED_FORCE_OF_FIRE = registerItem("red_force_of_fire", RED_FORCE_OF_FIRE);
        PURPLE_FORCE_OF_LIFE = registerItem("purple_force_of_life", PURPLE_FORCE_OF_LIFE);
        WHITE_FORCE_OF_LIGHTNING = registerItem("white_force_of_lightning", WHITE_FORCE_OF_LIGHTNING);
        BLACK_FORCE_OF_MOON = registerItem("black_force_of_moon", BLACK_FORCE_OF_MOON);
        PORTABLE_CRAFTING_TABLE = registerItem("portable_crafting_table", PORTABLE_CRAFTING_TABLE);
        PORTABLE_CRAFTING_MACHINE = registerItem("portable_crafting_machine", PORTABLE_CRAFTING_MACHINE);
        MAGNET = registerItem("magnet", MAGNET);
        TIME_CHECKER = registerItem("time_checker", TIME_CHECKER);
        TIME_CONDITIONER = registerItem("time_conditioner", TIME_CONDITIONER);
        ORIGIN_OF_THE_WORLD = registerItem("origin_of_the_world", ORIGIN_OF_THE_WORLD);
        COMPRESSOR = registerItem("compressor", COMPRESSOR);
        ELDER_S_WORDS = registerItem("elder_s_words", ELDER_S_WORDS);
        COORDINATE_RECORDER = registerItem("coordinate_recorder", COORDINATE_RECORDER);
        MUFFLER = registerItem("muffler", MUFFLER);
        SACHET = registerItem("sachet", SACHET);
        GRAFTER = registerItem("grafter", GRAFTER);
        GLASS_PICKAXE = registerItem("glass_pickaxe", GLASS_PICKAXE);
        CHEST_TRANSPORTER = registerItem("chest_transporter", CHEST_TRANSPORTER);
        FIRECRACKERS = registerItem("firecrackers", FIRECRACKERS);
        BROOM = registerItem("broom", BROOM);
        SHOOTING_STAR = registerItem("shooting_star", SHOOTING_STAR);
        INDUSTRIOUS_HAND = registerItem("industrious_hand", INDUSTRIOUS_HAND);
        BREAK_HAND = registerItem("break_hand", BREAK_HAND);
        SMART_HAND = registerItem("smart_hand", SMART_HAND);
        ANGRY_HAND = registerItem("angry_hand", ANGRY_HAND);
        TOUGHEN_HAND = registerItem("toughen_hand", TOUGHEN_HAND);
        GOLEM = registerItem("golem", GOLEM);
        FARMER_GOLEM = registerItem("farmer_golem", FARMER_GOLEM);
        MINER_GOLEM = registerItem("miner_golem", MINER_GOLEM);
        FISHER_GOLEM = registerItem("fisher_golem", FISHER_GOLEM);
        WARRIOR_GOLEM = registerItem("warrior_golem", WARRIOR_GOLEM);
        HERDER_GOLEM = registerItem("herder_golem", HERDER_GOLEM);
        SANTA_GIFT = registerItem("santa_gift", SANTA_GIFT);
        KETCHUP = registerItem("ketchup", KETCHUP);
        STRAWBERRY_JAM = registerItem("strawberry_jam", STRAWBERRY_JAM);
        BLUE_BERRY_JAM = registerItem("blue_berry_jam", BLUE_BERRY_JAM);
        ORANGE_JAM = registerItem("orange_jam", ORANGE_JAM);
        CHERRY_JAM = registerItem("cherry_jam", CHERRY_JAM);
        APPLE_JAM = registerItem("apple_jam", APPLE_JAM);
        YEAST_POWDER = registerItem("yeast_powder", YEAST_POWDER);
        BUTTER = registerItem("butter", BUTTER);
        CHEESE = registerItem("cheese", CHEESE);
        RAISIN = registerItem("raisin", RAISIN);
        TOFFEE_APPLE = registerItem("toffee_apple", TOFFEE_APPLE);
        CANDIED_HAW = registerItem("candied_haw", CANDIED_HAW);
        CUPCAKE = registerItem("cupcake", CUPCAKE);
        CAKE_ROLL = registerItem("cake_roll", CAKE_ROLL);
        CROISSANT = registerItem("croissant", CROISSANT);
        CARAMEL_PUDDING = registerItem("caramel_pudding", CARAMEL_PUDDING);
        DOUGHNUT = registerItem("doughnut", DOUGHNUT);
        PURPLE_DOUGHNUT = registerItem("purple_doughnut", PURPLE_DOUGHNUT);
        PINK_DOUGHNUT = registerItem("pink_doughnut", PINK_DOUGHNUT);
        WHITE_DOUGHNUT = registerItem("white_doughnut", WHITE_DOUGHNUT);
        BLUE_DOUGHNUT = registerItem("blue_doughnut", BLUE_DOUGHNUT);
        GREEN_DOUGHNUT = registerItem("green_doughnut", GREEN_DOUGHNUT);
        HONEY_PANCAKE = registerItem("honey_pancake", HONEY_PANCAKE);
        BOILED_EGG = registerItem("boiled_egg", BOILED_EGG);
        BAKED_CARROT = registerItem("baked_carrot", BAKED_CARROT);
        BACON = registerItem("bacon", BACON);
        VEGETABLE_KEBAB = registerItem("vegetable_kebab", VEGETABLE_KEBAB);
        BEEF_KEBAB = registerItem("beef_kebab", BEEF_KEBAB);
        PORK_KEBAB = registerItem("pork_kebab", PORK_KEBAB);
        LAMB_KEBAB = registerItem("lamb_kebab", LAMB_KEBAB);
        CHICKEN_KEBAB = registerItem("chicken_kebab", CHICKEN_KEBAB);
        RAW_COLORFUL_VEGETABLE = registerItem("raw_colorful_vegetable", RAW_COLORFUL_VEGETABLE);
        RAW_BRAISED_PORK_WITH_POTATOES = registerItem("raw_braised_pork_with_potatoes", RAW_BRAISED_PORK_WITH_POTATOES);
        RAW_BRAISED_BEEF_WITH_POTATOES = registerItem("raw_braised_beef_with_potatoes", RAW_BRAISED_BEEF_WITH_POTATOES);
        RAW_RABBIT_STEW = registerItem("raw_rabbit_stew", RAW_RABBIT_STEW);
        COLORFUL_VEGETABLE = registerItem("colorful_vegetable", COLORFUL_VEGETABLE);
        BRAISED_PORK_WITH_POTATOES = registerItem("braised_pork_with_potatoes", BRAISED_PORK_WITH_POTATOES);
        BRAISED_BEEF_WITH_POTATOES = registerItem("braised_beef_with_potatoes", BRAISED_BEEF_WITH_POTATOES);
        RABBIT_STEW = registerItem("rabbit_stew", RABBIT_STEW);
        DUMPLING = registerItem("dumpling", DUMPLING);
        MEAT_FLOSS_BREAD = registerItem("meat_floss_bread", MEAT_FLOSS_BREAD);
        CHRISTMAS_ROAST_CHICKEN = registerItem("christmas_roast_chicken", CHRISTMAS_ROAST_CHICKEN);
        FISH_AND_CHIPS = registerItem("fish_and_chips", FISH_AND_CHIPS);
        BURGER = registerItem("burger", BURGER);
        PIZZA = registerItem("pizza", PIZZA);
        SUSHI = registerItem("sushi", SUSHI);
        QINGTUAN = registerItem("qingtuan", QINGTUAN);
        SAKURA_MOCHI = registerItem("sakura_mochi", SAKURA_MOCHI);
        ZONGZI = registerItem("zongzi", ZONGZI);
        ZONGZI_BOILED_EGG = registerItem("zongzi_boiled_egg", ZONGZI_BOILED_EGG);
        ZONGZI_CHINESE_DATA = registerItem("zongzi_chinese_data", ZONGZI_CHINESE_DATA);
        ZONGZI_COOKED_PORKCHOP = registerItem("zongzi_cooked_porkchop", ZONGZI_COOKED_PORKCHOP);
        ZONGZI_SALT = registerItem("zongzi_salt", ZONGZI_SALT);
        ZONGZI_SODA_WATER = registerItem("zongzi_soda_water", ZONGZI_SODA_WATER);
        ZONGZI_HONEY_BOTTLE = registerItem("zongzi_honey_bottle", ZONGZI_HONEY_BOTTLE);
        SANDWICH = registerItem("sandwich", SANDWICH);
        STARGAZY_PIE = registerItem("stargazy_pie", STARGAZY_PIE);
        BAKED_SHROOMLIGHT = registerItem("baked_shroomlight", BAKED_SHROOMLIGHT);
        SOUL_FRIED_CHICKEN = registerItem("soul_fried_chicken", SOUL_FRIED_CHICKEN);
        LUXURIOUS_NETHERITE_BARBECUE = registerItem("luxurious_netherite_barbecue", LUXURIOUS_NETHERITE_BARBECUE);
        ASSORTED_ROOT_CANDY = registerItem("assorted_root_candy", ASSORTED_ROOT_CANDY);
        NETHERITE_MUSHROOM_STEW = registerItem("netherite_mushroom_stew", NETHERITE_MUSHROOM_STEW);
        DOUBLE_COLOR_VINE_SALAD = registerItem("double_color_vine_salad", DOUBLE_COLOR_VINE_SALAD);
        COLD_DRINK = registerItem("cold_drink", COLD_DRINK);
        APRICOT = registerItem("apricot", APRICOT);
        BANANA = registerItem("banana", BANANA);
        BLUEBERRY = registerItem("blueberry", BLUEBERRY);
        CHERRY = registerItem("cherry", CHERRY);
        CHINESE_DATE = registerItem("chinese_date", CHINESE_DATE);
        COCONUT = registerItem("coconut", COCONUT);
        GOLDEN_GRAPE = registerItem("golden_grape", GOLDEN_GRAPE);
        GRAPE = registerItem("grape", GRAPE);
        GRAPEFRUIT = registerItem("grapefruit", GRAPEFRUIT);
        HAWTHORN = registerItem("hawthorn", HAWTHORN);
        LEMON = registerItem("lemon", LEMON);
        LONGAN = registerItem("longan", LONGAN);
        LOQUAT = registerItem("loquat", LOQUAT);
        LYCHEE = registerItem("lychee", LYCHEE);
        MANGO = registerItem("mango", MANGO);
        ORANGE = registerItem("orange", ORANGE);
        PAYAPA = registerItem("payapa", PAYAPA);
        PEACH = registerItem("peach", PEACH);
        PEAR = registerItem("pear", PEAR);
        PERSIMMON = registerItem("persimmon", PERSIMMON);
        PLUM = registerItem("plum", PLUM);
        POMEGRANATE = registerItem("pomegranate", POMEGRANATE);
        STRAWBERRY = registerItem("strawberry", STRAWBERRY);
        TOMATO = registerItem("tomato", TOMATO);
        CITRUS = registerItem("citrus", CITRUS);
        AGENTIA_OF_LIGHTNESS = registerItem("agentia_of_lightness", AGENTIA_OF_LIGHTNESS);
        AGENTIA_OF_EYESIGHT = registerItem("agentia_of_eyesight", AGENTIA_OF_EYESIGHT);
        AGENTIA_OF_FIRE_SHIELD = registerItem("agentia_of_fire_shield", AGENTIA_OF_FIRE_SHIELD);
        AGENTIA_OF_WATERLESS = registerItem("agentia_of_waterless", AGENTIA_OF_WATERLESS);
        AGENTIA_OF_TRANSPARENTNESS = registerItem("agentia_of_transparentness", AGENTIA_OF_TRANSPARENTNESS);
        AGENTIA_OF_BOUNCE = registerItem("agentia_of_bounce", AGENTIA_OF_BOUNCE);
        AGENTIA_OF_AGILENESS = registerItem("agentia_of_agileness", AGENTIA_OF_AGILENESS);
        AGENTIA_OF_SHARPNESS = registerItem("agentia_of_sharpness", AGENTIA_OF_SHARPNESS);
        AGENTIA_OF_REJUVENESS = registerItem("agentia_of_rejuveness", AGENTIA_OF_REJUVENESS);
        AGENTIA_OF_BLOOD = registerItem("agentia_of_blood", AGENTIA_OF_BLOOD);
        AGENTIA_OF_EXTREMENESS = registerItem("agentia_of_extremeness", AGENTIA_OF_EXTREMENESS);
        AGENTIA_OF_SHIELD = registerItem("agentia_of_shield", AGENTIA_OF_SHIELD);
        AGENTIA_OF_TIDE = registerItem("agentia_of_tide", AGENTIA_OF_TIDE);
        AGENTIA_OF_CHAIN = registerItem("agentia_of_chain", AGENTIA_OF_CHAIN);
        AGENTIA_OF_SKY = registerItem("agentia_of_sky", AGENTIA_OF_SKY);
        AGENTIA_OF_OCEAN = registerItem("agentia_of_ocean", AGENTIA_OF_OCEAN);
        AGENTIA_OF_RIDGE = registerItem("agentia_of_ridge", AGENTIA_OF_RIDGE);
        AGENTIA_OF_DIRT = registerItem("agentia_of_dirt", AGENTIA_OF_DIRT);
        AGENTIA_OF_EARTH = registerItem("agentia_of_earth", AGENTIA_OF_EARTH);
        AGENTIA_OF_FIRE = registerItem("agentia_of_fire", AGENTIA_OF_FIRE);
        AGENTIA_OF_LIFE = registerItem("agentia_of_life", AGENTIA_OF_LIFE);
        LYCORIS_RADIATA_SEED = registerItem("lycoris_radiata_seed", LYCORIS_RADIATA_SEED);
        TRIFOLIUM_SEED = registerItem("trifolium_seed", TRIFOLIUM_SEED);
        BLACKTHORN_SEED = registerItem("blackthorn_seed", BLACKTHORN_SEED);
        CATTAIL_SEED = registerItem("cattail_seed", CATTAIL_SEED);
        MARIGOLD_SEED = registerItem("marigold_seed", MARIGOLD_SEED);
        HIBISCUS_SEED = registerItem("hibiscus_seed", HIBISCUS_SEED);
        HYACINTH_SEED = registerItem("hyacinth_seed", HYACINTH_SEED);
        CALAMUS_SEED = registerItem("calamus_seed", CALAMUS_SEED);
        WILD_LILIUM_SEED = registerItem("wild_lilium_seed", WILD_LILIUM_SEED);
        BAUHINIA_SEED = registerItem("bauhinia_seed", BAUHINIA_SEED);
        FLUFFY_GRASS_SEED = registerItem("fluffy_grass_seed", FLUFFY_GRASS_SEED);
        GERBERA_SEED = registerItem("gerbera_seed", GERBERA_SEED);
        ESPARTO_SEED = registerItem("esparto_seed", ESPARTO_SEED);
        GLOW_FORSYTHIA_SEED = registerItem("glow_forsythia_seed", GLOW_FORSYTHIA_SEED);
        GLAZED_SHADE_SEED = registerItem("glazed_shade_seed", GLAZED_SHADE_SEED);
        STELERA_SEED = registerItem("stelera_seed", STELERA_SEED);
        FORAGE_CRYSTAL_SEED = registerItem("forage_crystal_seed", FORAGE_CRYSTAL_SEED);
        ISORCHID_SEED = registerItem("isorchid_seed", ISORCHID_SEED);
        BURNING_CHRYSANTHE_SEED = registerItem("burning_chrysanthe_seed", BURNING_CHRYSANTHE_SEED);
        OXALIS_SEED = registerItem("oxalis_seed", OXALIS_SEED);
        LYCORIS_RADIATA = registerItem("lycoris_radiata", LYCORIS_RADIATA);
        TRIFOLIUM = registerItem("trifolium", TRIFOLIUM);
        BLACKTHORN = registerItem("blackthorn", BLACKTHORN);
        CATTAIL = registerItem("cattail", CATTAIL);
        MARIGOLD = registerItem("marigold", MARIGOLD);
        HIBISCUS = registerItem("hibiscus", HIBISCUS);
        HYACINTH = registerItem("hyacinth", HYACINTH);
        CALAMUS = registerItem("calamus", CALAMUS);
        WILD_LILIUM = registerItem("wild_lilium", WILD_LILIUM);
        BAUHINIA = registerItem("bauhinia", BAUHINIA);
        FLUFFY_GRASS = registerItem("fluffy_grass", FLUFFY_GRASS);
        GERBERA = registerItem("gerbera", GERBERA);
        ESPARTO = registerItem("esparto", ESPARTO);
        GLOW_FORSYTHIA = registerItem("glow_forsythia", GLOW_FORSYTHIA);
        GLAZED_SHADE = registerItem("glazed_shade", GLAZED_SHADE);
        STELERA = registerItem("stelera", STELERA);
        FORAGE_CRYSTAL = registerItem("forage_crystal", FORAGE_CRYSTAL);
        ISORCHID = registerItem("isorchid", ISORCHID);
        BURNING_CHRYSANTHE = registerItem("burning_chrysanthe", BURNING_CHRYSANTHE);
        OXALIS = registerItem("oxalis", OXALIS);
        CALLIOPSIS = registerItem("calliopsis", CALLIOPSIS);
        CYCLAMEN = registerItem("cyclamen", CYCLAMEN);
        IRIS = registerItem("iris", IRIS);
        LILIUM_PUMILUM = registerItem("lilium_pumilum", LILIUM_PUMILUM);
        SNOWDROP = registerItem("snowdrop", SNOWDROP);
        NARCISSUS = registerItem("narcissus", NARCISSUS);
        COLE_FLOWER = registerItem("cole_flower", COLE_FLOWER);
        LUPINE = registerItem("lupine", LUPINE);
        CROCU = registerItem("crocu", CROCU);
        PANSY = registerItem("pansy", PANSY);
        ARABIA_SPEEDWELL = registerItem("arabia_speedwell", ARABIA_SPEEDWELL);
        SILENE_PENDULA = registerItem("silene_pendula", SILENE_PENDULA);
        ARTEMISIA_ARGYI = registerItem("artemisia_argyi", ARTEMISIA_ARGYI);
        BLUE_ROSE = registerItem("blue_rose", BLUE_ROSE);
        POINSETTIA = registerItem("poinsettia", POINSETTIA);
        CHRISTMAS_TREE = registerItem("christmas_tree", CHRISTMAS_TREE);
        RICE_SEED = registerItem("rice_seed", RICE_SEED);
        RICE = registerItem("rice", RICE);
        FRUIT_SAPLING = registerItem("fruit_sapling", FRUIT_SAPLING);
        ORE_SAPLING = registerItem("ore_sapling", ORE_SAPLING);
        WOOL_SAPLING = registerItem("wool_sapling", WOOL_SAPLING);
        SAKURA_SAPLING = registerItem("sakura_sapling", SAKURA_SAPLING);
        FRUIT_LEAVES = registerItem("fruit_leaves", FRUIT_LEAVES);
        ORE_LEAVES = registerItem("ore_leaves", ORE_LEAVES);
        WOOL_LEAVES = registerItem("wool_leaves", WOOL_LEAVES);
        SAKURA_LEAVES = registerItem("sakura_leaves", SAKURA_LEAVES);
        SEALING_WAND = registerItem("sealing_wand", SEALING_WAND);
        STAR_WAND = registerItem("star_wand", STAR_WAND);
        DREAM_WAND = registerItem("dream_wand", DREAM_WAND);
        TEMPERANCER = registerItem("temperancer", TEMPERANCER);
        WAND_OF_THE_DARKNESS = registerItem("wand_of_the_darkness", WAND_OF_THE_DARKNESS);
        RED_LIP = registerItem("red_lip", RED_LIP);
        PURPLE_EYE = registerItem("purple_eye", PURPLE_EYE);
        LASH = registerItem("lash", LASH);
        CAT_BREED = registerItem("cat_breed", CAT_BREED);
        GARLAND = registerItem("garland", GARLAND);
        BLACK_FRAMED_GLASSES = registerItem("black_framed_glasses", BLACK_FRAMED_GLASSES);
        ORANGE_FRAMED_GLASSES = registerItem("orange_framed_glasses", ORANGE_FRAMED_GLASSES);
        JOKING_GLASSES = registerItem("joking_glasses", JOKING_GLASSES);
        MINION_GOGGLES = registerItem("minion_goggles", MINION_GOGGLES);
        PANTS = registerItem("pants", PANTS);
        EMPIRE_HAT = registerItem("empire_hat", EMPIRE_HAT);
        GLASS_HELMET = registerItem("glass_helmet", GLASS_HELMET);
        GLOW_HAT = registerItem("glow_hat", GLOW_HAT);
        GREEN_HAT = registerItem("green_hat", GREEN_HAT);
        BLACK_HAT = registerItem("black_hat", BLACK_HAT);
        NURSE_HAT = registerItem("nurse_hat", NURSE_HAT);
        JACKET = registerItem("jacket", JACKET);
        RED_COAT = registerItem("red_coat", RED_COAT);
        TIGHT_LEATHER_LEGGINGS = registerItem("tight_leather_leggings", TIGHT_LEATHER_LEGGINGS);
        BLUE_JEANS = registerItem("blue_jeans", BLUE_JEANS);
        SNOW_BOOTS = registerItem("snow_boots", SNOW_BOOTS);
        CLASSICAL_PAINTING = registerItem("classical_painting", CLASSICAL_PAINTING);
        SPRING_FESTIVAL_DECORATIONS = registerItem("spring_festival_decorations", SPRING_FESTIVAL_DECORATIONS);
        CHARACTER = registerItem("character", CHARACTER);
        CHINA_FLAG = registerItem("china_flag", CHINA_FLAG);
        USA_FLAG = registerItem("usa_flag", USA_FLAG);
        RUSSIA_FLAG = registerItem("russia_flag", RUSSIA_FLAG);
        UK_FLAG = registerItem("uk_flag", UK_FLAG);
        FRANCE_FLAG = registerItem("france_flag", FRANCE_FLAG);
        BILIBILI_LOGO = registerItem("bilibili_logo", BILIBILI_LOGO);
        GITHUB_LOGO = registerItem("github_logo", GITHUB_LOGO);
        MCMOD_LOGO = registerItem("mcmod_logo", MCMOD_LOGO);
        TCP_LOGO = registerItem("tcp_logo", TCP_LOGO);
        CBL_LOGO = registerItem("cbl_logo", CBL_LOGO);
        NF_LOGO = registerItem("nf_logo", NF_LOGO);
        SHIELD_CHINA_FLAG = registerItem("shield_china_flag", SHIELD_CHINA_FLAG);
        SHIELD_USA_FLAG = registerItem("shield_usa_flag", SHIELD_USA_FLAG);
        SHIELD_RUSSIA_FLAG = registerItem("shield_russia_flag", SHIELD_RUSSIA_FLAG);
        SHIELD_UK_FLAG = registerItem("shield_uk_flag", SHIELD_UK_FLAG);
        SHIELD_FRANCE_FLAG = registerItem("shield_france_flag", SHIELD_FRANCE_FLAG);
        SHIELD_BILIBILI = registerItem("shield_bilibili", SHIELD_BILIBILI);
        SHIELD_GITHUB = registerItem("shield_github", SHIELD_GITHUB);
        SHIELD_MCMOD = registerItem("shield_mcmod", SHIELD_MCMOD);
        SHIELD_TCP = registerItem("shield_tcp", SHIELD_TCP);
        SHIELD_CBL = registerItem("shield_cbl", SHIELD_CBL);
        SHIELD_NF = registerItem("shield_nf", SHIELD_NF);
        WHITE_SIGN = registerItem("white_sign", WHITE_SIGN);
        ORANGE_SIGN = registerItem("orange_sign", ORANGE_SIGN);
        MAGENTA_SIGN = registerItem("magenta_sign", MAGENTA_SIGN);
        LIGHT_BLUE_SIGN = registerItem("light_blue_sign", LIGHT_BLUE_SIGN);
        YELLOW_SIGN = registerItem("yellow_sign", YELLOW_SIGN);
        LIME_SIGN = registerItem("lime_sign", LIME_SIGN);
        PINK_SIGN = registerItem("pink_sign", PINK_SIGN);
        GRAY_SIGN = registerItem("gray_sign", GRAY_SIGN);
        LIGHT_GRAY_SIGN = registerItem("light_gray_sign", LIGHT_GRAY_SIGN);
        CYAN_SIGN = registerItem("cyan_sign", CYAN_SIGN);
        PURPLE_SIGN = registerItem("purple_sign", PURPLE_SIGN);
        BLUE_SIGN = registerItem("blue_sign", BLUE_SIGN);
        BROWN_SIGN = registerItem("brown_sign", BROWN_SIGN);
        GREEN_SIGN = registerItem("green_sign", GREEN_SIGN);
        RED_SIGN = registerItem("red_sign", RED_SIGN);
        BLACK_SIGN = registerItem("black_sign", BLACK_SIGN);
        GLASS_SIGN = registerItem("glass_sign", GLASS_SIGN);

    }

    private static Item registerItem(String id, Item item) {
        return Registry.register(Registry.ITEM, new Identifier(MODID, id), item);
    }



}
